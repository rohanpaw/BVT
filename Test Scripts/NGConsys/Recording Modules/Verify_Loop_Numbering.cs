///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace TestProject.Recording_Modules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Verify_Loop_Numbering recording.
    /// </summary>
    [TestModule("a0b6028c-8bd4-43ba-abc5-93b4fc948ab6", ModuleType.Recording, 1)]
    public partial class Verify_Loop_Numbering : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::TestProject.NGConsysRepository repository.
        /// </summary>
        public static global::TestProject.NGConsysRepository repo = global::TestProject.NGConsysRepository.Instance;

        static Verify_Loop_Numbering instance = new Verify_Loop_Numbering();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Verify_Loop_Numbering()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Verify_Loop_Numbering Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Libraries.Panel_Functions.AddPanels(ValueConverter.ArgumentFromString<int>("NumberofPanels", "1"), "Pro32xD", "");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ClickOnNavigationTreeItem("Node");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ClickOnNavigationTreeExpander("Node");
            Delay.Milliseconds(0);
            
            //Libraries.Common_Functions.ClickOnNavigationTreeExpander("PFI");
            //Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ClickOnNavigationTreeItem("Built-in Loop-A");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("Built-in Loop-A (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("Built-in Loop-B (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("Built-in Loop-C (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("Built-in Loop-D (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ClickOnNavigationTreeItem("Node");
            Delay.Milliseconds(0);
            
            Libraries.Devices_Functions.AddDevicesfromMainProcessorGallery("PLX800", "Loops", "PFI");
            Delay.Milliseconds(0);
            
            //Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("6", "Address", "E");
            //Delay.Milliseconds(0);
            
            //Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("7", "Address", "F");
            //Delay.Milliseconds(0);
            
            //Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("8", "Address", "G");
            //Delay.Milliseconds(0);
            
            //Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("9", "Address", "H");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(15));
            Delay.Duration(5000, false);
            
            Libraries.Common_Functions.ClickOnNavigationTreeItem("Backplane");
            Delay.Milliseconds(0);
            
            //Libraries.Common_Functions.ClickOnNavigationTreeExpander("Backplane");
            //Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ClickOnNavigationTreeExpander("PLX");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("PLX800-E (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("PLX800-F (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("PLX800-G (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("PLX800-H (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ClickOnNavigationTreeItem("Node");
            Delay.Milliseconds(0);
            
            Libraries.Devices_Functions.AddDevicesfromMainProcessorGallery("PLX800", "Loops", "PFI");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 8s.", new RecordItemIndex(25));
            Delay.Duration(8000, false);
            
            Libraries.Devices_Functions.AddDevicesfromMainProcessorGallery("PLX800", "Loops", "PFI");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 8s.", new RecordItemIndex(27));
            Delay.Duration(8000, false);
            
            //Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("6", "Address", "5");
            //Delay.Milliseconds(0);
            
            //Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("7", "Address", "6");
            //Delay.Milliseconds(0);
            
            //Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("8", "Address", "7");
            //Delay.Milliseconds(0);
            
            //Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("9", "Address", "8");
            //Delay.Milliseconds(0);
            
            Libraries.InventoryGrid_Functions.editDeviceLabel("7", "Label", "TEXT-5");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.SaveProjectFromFileOption("418_81");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ReopenProject("418_81");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ClickOnNavigationTreeItem("Node");
            Delay.Milliseconds(0);
            
            Libraries.InventoryGrid_Functions.verifyInventoryGridProperties("5", "Label", "TEXT-5");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.ClickOnNavigationTreeExpander("Node");
            Delay.Milliseconds(0);
            
            //Libraries.Common_Functions.ClickOnNavigationTreeExpander("Backplane");
            //Delay.Milliseconds(0);
            
            //Libraries.Common_Functions.ClickOnNavigationTreeExpander("PLX");
            //Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("PLX800-6 (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("PLX800-7 (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("PLX800-8 (0 of 125");
            Delay.Milliseconds(0);
            
            Libraries.Common_Functions.VerifyAndClickNavigationTreeItemText("TEXT-5 (0 of 125");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='TEXT-5 (0 of 125)') on item 'FormMe2.ItemsHost.TEXT50Of125'.", repo.FormMe2.ItemsHost.TEXT50Of125Info, new RecordItemIndex(44));
            //Validate.AttributeEqual(repo.FormMe2.ItemsHost.TEXT50Of125Info, "Text", "TEXT-5 (0 of 125)");
            //Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
